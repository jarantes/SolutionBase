@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@using WEB_BASE.DataContexts
@model IPagedList<ProductViewModels>
@{
    var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new IdentityDb()));
}
    <div id="listProducts">

        <table class="table table-striped table-bordered table-responsive table-hover">
            <thead>
                <tr>
                    <th>
                        Categoria
                    </th>
                    <th>
                        Código do Produto
                    </th>
                    <th>
                        @Html.ActionLink("Nome do Produto", "Index", new { sortOrder = ViewBag.NameParam })
                    </th>
                    <th>
                        Preço
                    </th>
                    <th>
                        Criado Por
                    </th>
                    <th>
                        @Html.ActionLink("Data da Criação", "Index", new { sortOrder = ViewBag.DateParam })
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.CategoryName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProductCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProductName)
                        </td>
                        <td>
                            @string.Format("{0:C}", item.UnitPrice)
                        </td>
                        <td>
                            @{
                                var user = manager.FindById(item.CreatedBy);
                                @Html.DisplayFor(modelItem => user.Name)
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreationDate)
                        </td>
                        <td>
                            <a href="@Url.Action("Edit", "Product", new {id = item.ProductId})" class="btn btn-warning btn-xs" data-toggle="tooltip" data-original-title="Editar">
                                <span class="glyphicon glyphicon-edit"></span>
                            </a>
                            <a href="@Url.Action("Details", "Product", new {id = item.ProductId})" class="btn btn-info btn-xs" data-toggle="tooltip" data-original-title="Detalhes">
                                <span class="glyphicon glyphicon-th-list"></span>
                            </a>
                            <a href="@Url.Action("Delete", "Product", new {id = item.ProductId})" class="btn btn-danger btn-xs" data-toggle="tooltip" data-original-title="Excluir">
                                <span class="glyphicon glyphicon-remove"></span>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="col-md-12 text-center" data-otf-target="#listProduct">
            @Html.PagedListPager(Model, page => @Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, productName = ViewBag.CurrentFilter }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions
            {
                HttpMethod = "Get",
                InsertionMode = InsertionMode.Replace,
                UpdateTargetId = "listProducts",
                OnBegin = "processing.showPleaseWait();",
                OnComplete = "processing.hidePleaseWait();"
            }))
        </div>

    </div>
</div>