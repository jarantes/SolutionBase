@model Module

@{
    ViewBag.Title = "Criar Módulo";
    Layout = "~/Views/Shared/_LayoutAuth.cshtml";
}

<h2>@ViewBag.Title</h2>

@if (TempData["error"] != null)
{
    <div class="alert alert-dismissable alert-danger">
        <button type="button" class="close" data-dismiss="alert">×</button>
        <strong>Erro!</strong> @TempData["error"].ToString()
    </div>
}

@if (TempData["success"] != null)
{
    <div class="alert alert-dismissable alert-success">
        <button type="button" class="close" data-dismiss="alert">×</button>
        <strong>Sucesso!</strong> @TempData["success"].ToString()
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div id="components" class="well form-horizontal">
        <fieldset>
            <legend>Modelo de Módulos</legend>

            <div class="form-group">
                @Html.LabelFor(model => model.ModuleName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModuleName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModuleName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Controller, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Controller, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Controller, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Action, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Action, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Action, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Icon, "Icone", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Icon", null, new { @class = "form-control", onchange = "SelectIcon();", onkeydown = "SelectIcon();", onkeyup = "SelectIcon();" })
                    <span id="iconSelected"></span>
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.ParentModuleId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ParentModuleId", null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ParentModuleId, "", new { @class = "text-danger" })
                    <span id="iconSelected"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-primary">
                        <span class="glyphicon glyphicon-floppy-saved"></span>&nbsp;Salvar
                    </button>
                </div>
            </div>
        </fieldset>
    </div>
}

<div>
    <a href="@Url.Action("Index", "Module")" class="btn btn-default">
        <span class="glyphicon glyphicon-list-alt"></span>&nbsp;Voltar para Lista
    </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
